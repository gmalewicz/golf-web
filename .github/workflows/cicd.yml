name: CI for golf-web

on:
  push:
    branches: [ master ]
    tags:
     - '**'
  pull_request:
    branches: [ master ]

env:
  IMAGE: ${{ github.repository_owner }}/${{ github.event.repository.name }}
  ORGANIZATION: ${{ github.repository_owner }}
  VERSION_EXP: git describe --tags --always --first-parent --dirty

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install and npm run build
        run: |
          npm i --legacy-peer-deps
          npm run build:prod-locale

      - name: Set up version
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION=$($VERSION_EXP)" >> $GITHUB_ENV

      - name: Install doctl
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Assemble image
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        run: docker build -t $IMAGE:$VERSION -t $IMAGE:latest .

      - name: Publish image
        if: startsWith(github.ref, 'refs/tags/')
        #if: always()
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u $ORGANIZATION --password-stdin
          docker push $IMAGE:$VERSION
          docker push $IMAGE:latest

      - name: Update deployment file
        if: startsWith(github.ref, 'refs/tags/')
        #if: always()
        run: TAG=$VERSION && sed -i 's|<IMAGE>|'${IMAGE}':'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        if: startsWith(github.ref, 'refs/tags/')
        #if: always()
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 golf

      # temporary as node is very small
      - name: Remove existing deployment
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        run: kubectl delete deployment golf-web

      - name: Deploy to DigitalOcean Kubernetes
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml

      - name: Verify deployment
        #if: always()
        if: startsWith(github.ref, 'refs/tags/')
        run: kubectl rollout status deployment/golf-web

#  cypress-run:
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - uses: actions/setup-node@v4
#        with:
#          node-version: 20
#          cache: 'npm'
#
#      - name: npm override
#        run:
#          echo "node-options=--max_old_space_size=4096" >> ~/.npmrc
#
#      - name: Cypress run
#        uses: cypress-io/github-action@v6
#        with:
#          install-command: yarn --frozen-lockfile --silent --legacy-peer-deps --dns-result-order=ipv4first
#          build: npm run build --legacy-peer-deps --dns-result-order=ipv4first
#          start: npm start --dns-result-order=ipv4first
#          wait-on: 'http://127.0.0.1:4200'
#          wait-on-timeout: 180

#  cypress-run:
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Cypress run
#        uses: cypress-io/github-action@v6
#        with:
#          install-command: yarn --frozen-lockfile --silent --legacy-peer-deps
#          start: npm start --host=0.0.0.0 --disable-host-check --port=4200
#          # quote the url to be safe against YML parsing surprises
#          wait-on: 'http://localhost:4200'
#          wait-on-timeout: 180


  test-coverage:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install
        run: |
          npm i --legacy-peer-deps

      - name: test coverage
        run: yarn test --code-coverage --watch=false

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

